collect:
  disallowed-php-scripts:
    file:lookup:
      path: web
      pattern: '^(adminer|phpmyadmin|bigdump)?\.php$'

  file-counts:
    file:lookup:
      path: web/sites/default/files
      pattern: '.*\.(jpg|png|gif|pdf|doc|docx)$'

analyse:
  # Before: Basic template
  # breach-format:
  #   type: key-value
  #   key: '{{ .Breach.Key }}'
  #   value: '{{ .Breach.Value }}'

  # After: Enhanced template with new functions
  disallowed-scripts-found:
    not:empty:
      description: Disallowed PHP scripts detected
      input: disallowed-php-scripts
      severity: high
      breach-format:
        template: |
          üö® {{ .CheckName | humanize }}
          üìÅ Found {{ len .Breach.Value }} dangerous {{ pluralize (len .Breach.Value) "script" "scripts" }}:
          {{ range .Breach.Value }}‚Ä¢ {{ . | colorize "red" }}{{ end }}
          üí° These files should be removed immediately!

  # Example with conditional formatting
  file-count-analysis:
    not:empty:
      description: File analysis results
      input: file-counts
      breach-format:
        template: |
          üìä {{ if gt (len .Breach.Value) 100 }}{{ colorize "red" "HIGH" }}{{ else if gt (len .Breach.Value) 50 }}{{ colorize "yellow" "MEDIUM" }}{{ else }}{{ colorize "green" "LOW" }}{{ end }} file count detected
          
          üìà Statistics:
          ‚Ä¢ Total files: {{ len .Breach.Value | humanize }}
          ‚Ä¢ First file: {{ first .Breach.Value | default "None" }}
          ‚Ä¢ Sample: {{ slice 0 3 .Breach.Value | join ", " | truncate 100 }}
          
          {{ if gt (len .Breach.Value) 1000 }}
          ‚ö†Ô∏è  Consider implementing file cleanup policies
          {{ end }}

output:
  stdout:
    format: pretty